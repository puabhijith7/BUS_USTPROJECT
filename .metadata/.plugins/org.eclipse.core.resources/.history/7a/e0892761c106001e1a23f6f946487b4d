package com.example.busservice1.Controller;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import Service.com.bus.RouteService;
import dto.com.bus.BusDto;
import dto.com.bus.RouteDto;
import model.com.bus.Bus;
import model.com.bus.Route;

public class RouteController {
	
	@Autowired
    private RouteService routeService;
	
	public RouteDto routeConvertToDto(Route route) {
		return new RouteDto(route.getRouteId(), route.getSource(),route.getDestination(), route.getTotalDistance(), route.getFarePerKm());
		}

		public Route routeConvertToEntity(RouteDto routeDto) {
		Route route = new Route(routeDto.getRouteId(),routeDto.getSource(),routeDto.getDestination(),routeDto.getTotalDistance(),routeDto.getFarePerKm());
		return route;
		}
		
		 @PostMapping("/route")
		    public ResponseEntity<RouteDto> create(@RequestBody RouteDto rDto){
		    Route route = routeConvertToEntity(rDto);
		    Route createdRoute = routeService.save(route);
		    RouteDto dto = routeConvertToDto(createdRoute);
		    return ResponseEntity.status(HttpStatus.CREATED).body(dto);
		    }

		    @GetMapping("/bus")
		    public ResponseEntity<List<RouteDto>> getAllBus(){
		    List<Route> route = routeService.getall();
		    if(bus.isEmpty())
		    return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
		    List<BusDto> busDto=bus.stream().map(bus1 -> busConvertToDto(bus1)).collect(Collectors.toList());
		    return ResponseEntity.status(HttpStatus.OK).body(busDto);
		    }

		    @GetMapping("/bus/{busId}")
		    public ResponseEntity<RouteDto> getBus(@PathVariable int busId){


		    Optional<Bus> busOpt = routeService.getbybusId(busId);
		    if(busOpt.isEmpty())
		    return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		    Bus bus = busOpt.get();
		    RouteDto dto = busConvertToDto(bus);
		    return ResponseEntity.status(HttpStatus.OK).body(dto);
		    }
		    
	
	
	
	
}
